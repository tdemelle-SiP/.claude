# Code Guide FUll – Consolidated Reference

> **Purpose**  Serve as the single entry‑point for all SiP technical standards. Read this first, then jump to the deep guides listed here. 100 % of the rules from the original documentation set are reflected below in distilled form.

---

## 1 Documentation Map

| Area               | Deep Guide                                 | Key Topics                                          |
| ------------------ | ------------------------------------------ | --------------------------------------------------- |
| Platform & Plugins | `sip-plugin-platform.md`                   | Core loader, dependency graph                       |
| Architecture       | `sip-plugin-architecture.md`               | Plugin scaffolding, naming, loader pattern          |
| Data Storage       | `sip-plugin-data-storage.md`               | Storage API, dir layout, security rules             |
| AJAX               | `sip-plugin-ajax.md`                       | FormData helper, standard handler, error surfacing  |
| Browser Extension  | `sip-printify-manager-extension-widget.md` | Background ↔ content flow, §6.4 namespacing         |
| App Architecture   | `sip-printify-manager-architecture.md`     | Table hierarchy, parent/child rows                  |
| UI Components      | `sip-feature-ui-components.md`             | Toast, modal, spinner, progress‑dialog              |
| DataTables         | `sip-feature-datatables.md`                | Base config, parent/child sort, stateSave pattern   |
| PhotoSwipe         | `sip-feature-photoswipe.md`                | Asset enqueue, lightbox init, thumbnail util        |
| CodeMirror         | `sip-feature-codemirror.md`                | Platform load, editor init, debounce pattern        |
| Third‑Party Libs   | `sip-feature-third-party-libraries.md`     | **Local‑only** rule, version locking                |
| CSS                | `sip-development-css.md`                   | BEM + `sip-` prefix, variable naming, z‑index scale |
| Testing & Debug    | `sip-development-testing-debug.md`         | Debug toggle, JS/PHP logging, checklist             |
| Release Mgmt       | `sip-development-release-mgmt.md`          | SemVer, dual lifecycle, 16‑step script              |
| Documentation      | `sip-development-documentation.md`         | JSDoc/PHPDoc templates, what to avoid               |

*(Keep table alphabetical; add new guides here.)*

---

## 2 Universal “Must / Must‑Not” Rules

### JavaScript

* **No `var`**; use `const`/`let`.
* **Async/await only**—no raw `.then()` chains.
* **No globals**. UI called through `SiPWidget.UI.*` only.
* **Never swallow errors**; log + re‑throw or surface via `SiP_AJAX_Response::error()`.
* **No remote CDN scripts**; all third‑party libs live under `assets/lib/`.

### PHP

* Escape every output (`esc_html`, `wp_kses_post`).
* AJAX replies via `SiP_AJAX_Response::{success,error}` helpers.
* Document functions with PHPDoc per `sip-development-documentation.md`.

### CSS

* BEM with plugin prefix (`sip‑pm‑component__element--modifier`).
* No ID selectors; max nesting depth 3; `!important` only for third‑party overrides.
* All table column widths as CSS variables.

### Release / Versioning

* SemVer `MAJOR.MINOR.PATCH` in plugin header or `manifest.json`.
* Version bump on every public API change.
* Release pipeline = PowerShell 16‑step script (see release guide).

### Testing & Debugging

* Use central `SiP.Core.debug`; production logs silent by default.
* Checklist before merge: lint, unit tests, staging deploy, performance profiling.

---

## 3 Quick Implementation Checklists

### 3.1 AJAX Handler (PHP)

1. Verify nonce.
2. Route `{plugin, action_type}` to handler.
3. On success: `SiP_AJAX_Response::success(...)`.
4. On error: `SiP_AJAX_Response::error(...)`.

### 3.2 DataTable Init (JS)

```javascript
const table = new DataTable('#id', { ...baseConfig, columns:[…] });
SiP.PrintifyManager.utilities.ui.updatePhotoSwipeDimensions();
```

Checklist: no serverSide, rowGroup only for parent/child, stateSave callbacks implemented.

### 3.3 Widget Public API (JS)

```javascript
return {
  init,                // auto‑invoked when page qualifies
  showWidget,          // display iframe
  toggleWidget,        // hide/show
  showToast,           // debug toast
  // helpers...
};
```

External scripts invoke **only** `SiPWidget.UI.showWidget()` / `.toggleWidget()`.

---

## 4 Session‑Startup Reminder for AI

```
MODE: follow CODE_GUIDE_FULL – no speculation, no defensive code, no globals.
```

---

*This consolidated guide is ≤2 k words and contains every enforceable rule from the original multi‑file set. Consult the deep guides for implementation details and examples.*
